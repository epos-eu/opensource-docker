#    EPOS Open Source - Local installation with Docker
#    Copyright (C) 2022  EPOS ERIC
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.'

version: '3.7'

services:
  #gui:
  #  image: "${DOCKER_REGISTRY}/${GUI_IMAGE}"
  #  container_name: gui
  #  ports:
  #    - "${GUI_PORT}:80"
  #  environment:
  #    - API_HOST="${API_HOST}"
  #  volumes:
  #    - rabbitmq:/var/lib/rabbitmq/
  #  networks:
  #    - epos_network
  #  depends_on:
  #    - gateway
  #backofficegui:
  #  image: "${DOCKER_REGISTRY}/${BACKOFFICE_GUI_IMAGE}"
  #  container_name: backoffice-gui
  #  ports:
  #    - "${BACKOFFICE_GUI_PORT}:80"
  #  environment:
  #    - API_HOST="${API_HOST}"
  #  volumes:
  #    - rabbitmq:/var/lib/rabbitmq/
  #  networks:
  #    - epos_network
  #  depends_on:
  #    - gateway
  gateway:
    image: "${DOCKER_REGISTRY}/${GATEWAY_IMAGE}"
    container_name: gateway
    ports:
      - "${API_PORT}:5000"
    networks:
      - epos_network
    restart: always
    environment:
      - BASECONTEXT=${BASE_CONTEXT}
      - LOAD_RESOURCES_API=true
      - LOAD_INGESTOR_API=true
      - LOAD_EXTERNAL_ACCESS_API=true
      - LOAD_BACKOFFICE_API=false
      - LOAD_PROCESSING_HOST=false
  rabbitmq:
    image: "${MESSAGE_BUS_IMAGE}"
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq:/var/lib/rabbitmq/
    environment:
      - "RABBITMQ_DEFAULT_PASS=${BROKER_USERNAME}"
      - "RABBITMQ_DEFAULT_USER=${BROKER_PASSWORD}"
      - "RABBITMQ_DEFAULT_VHOST=${BROKER_VHOST}"
    networks:
      - epos_network
  resources:
    image: "${DOCKER_REGISTRY}/${RESOURCES_SERVICE_IMAGE}"
    container_name: resources-service
    volumes:
      - resources:/resources
    networks:
      - epos_network
    restart: always
    environment:
      - BROKER_HOST=rabbitmq
      - BROKER_USERNAME=${BROKER_USERNAME}
      - BROKER_PASSWORD=${BROKER_PASSWORD}
      - BROKER_VHOST=${BROKER_VHOST}
      - BASECONTEXT=${BASE_CONTEXT}
      - FACETS_DEFAULT=true
    depends_on:
      - rabbitmq
  backoffice:
    image: "${DOCKER_REGISTRY}/${BACKOFFICE_SERVICE_IMAGE}"
    container_name: backoffice-service
    volumes:
      - backoffice:/backoffice
    networks:
      - epos_network
    restart: always
    environment:
      - BROKER_HOST=rabbitmq
      - BROKER_USERNAME=${BROKER_USERNAME}
      - BROKER_PASSWORD=${BROKER_PASSWORD}
      - BROKER_VHOST=${BROKER_VHOST}
      - PERSISTENCE_NAME=${PERSISTENCE_NAME}
      - POSTGRESQL_CONNECTION_STRING=${POSTGRESQL_CONNECTION_STRING}
      - BASECONTEXT=${BASE_CONTEXT}
    depends_on:
      - rabbitmq
  ingestor:
    image: "${DOCKER_REGISTRY}/${INGESTOR_IMAGE}"
    container_name: ingestor-service
    volumes:
      - ingestor:/ingestor
    networks:
      - epos_network
    restart: always
    environment:
      - BROKER_HOST=rabbitmq
      - BROKER_USERNAME=${BROKER_USERNAME}
      - BROKER_PASSWORD=${BROKER_PASSWORD}
      - BROKER_VHOST=${BROKER_VHOST}
      - PERSISTENCE_NAME=${PERSISTENCE_NAME}
      - POSTGRESQL_CONNECTION_STRING=${POSTGRESQL_CONNECTION_STRING}
      - POSTGRESQL_HOST=postgrescerif:5432
      - POSTGRESQL_DBNAME=${POSTGRES_DB}
      - POSTGRESQL_USERNAME=${POSTGRES_USER}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - INGESTOR_HASH=3F58A1895982CC81A2E5CEDA7DD9AC7009DF9998
      - BASECONTEXT=${BASE_CONTEXT}
    depends_on:
      - rabbitmq
  externalaccess:
    image: "${DOCKER_REGISTRY}/${EXTERNAL_ACCESS_IMAGE}"
    container_name: external-access-service
    volumes:
      - externalaccess:/externalaccess
    networks:
      - epos_network
    restart: always
    environment:
      - BROKER_HOST=rabbitmq
      - BROKER_USERNAME=${BROKER_USERNAME}
      - BROKER_PASSWORD=${BROKER_PASSWORD}
      - BROKER_VHOST=${BROKER_VHOST}
      - BASECONTEXT=${BASE_CONTEXT}
    depends_on:
      - rabbitmq
  converter:
    image: "${DOCKER_REGISTRY}/${CONVERTER_IMAGE}"
    container_name: converter-service
    volumes:
      - converter:/converter
    networks:
      - epos_network
    restart: always
    environment:
      - BROKER_HOST=rabbitmq
      - BROKER_USERNAME=${BROKER_USERNAME}
      - BROKER_PASSWORD=${BROKER_PASSWORD}
      - BROKER_VHOST=${BROKER_VHOST}
      - REPOTOKEN_DEFAULT=${REPOTOKEN_DEFAULT}
    depends_on:
      - rabbitmq
  processingaccessservice:
    image: "${DOCKER_REGISTRY}/${PROCESSING_ACCESS_SERVICE_IMAGE}"
    container_name: processing-access-service
    volumes:
      - processingaccessservice:/processingaccessservice
    networks:
      - epos_network
    restart: always
    environment:
      - BROKER_HOST=rabbitmq
      - BROKER_USERNAME=${BROKER_USERNAME}
      - BROKER_PASSWORD=${BROKER_PASSWORD}
      - BROKER_VHOST=${BROKER_VHOST}
      - BASECONTEXT=${BASE_CONTEXT}
      - PERSISTENCE_NAME=${PERSISTENCE_NAME_PROCESSING}
      - POSTGRESQL_HOST=postgrescerif:5432
      - POSTGRESQL_DBNAME=${POSTGRES_DB}
      - POSTGRESQL_USERNAME=${POSTGRES_USER}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - SWIRRL_BASE_PATH=${SWIRRL_BASE_PATH}
    depends_on:
      - rabbitmq
  datametadataservice:
    image: "${DOCKER_REGISTRY}/${DATA_METADATA_SERVICE_IMAGE}"
    container_name: datametadataservice
    volumes:
      - datametadataservice:/datametadataservice
    networks:
      - epos_network
    restart: always
    environment:
      - BROKER_HOST=rabbitmq
      - BROKER_USERNAME=${BROKER_USERNAME}
      - BROKER_PASSWORD=${BROKER_PASSWORD}
      - BROKER_VHOST=${BROKER_VHOST}
      - PERSISTENCE_NAME=${PERSISTENCE_NAME}
      - POSTGRESQL_CONNECTION_STRING=${POSTGRESQL_CONNECTION_STRING}
      - POSTGRESQL_HOST=postgrescerif:5432
      - POSTGRESQL_DBNAME=${POSTGRES_DB}
      - POSTGRESQL_USERNAME=${POSTGRES_USER}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - APIHOST=${EXECUTE_HOST}
      - APICONTEXT=${BASE_CONTEXT}${API_PATH}
      - MONITORING=${MONITORING}
      - MONITORING_URL=${MONITORING_URL}
      - MONITORING_USER=${MONITORING_USER}
      - MONITORING_PWD=${MONITORING_PWD}
      - NUM_OF_PUBLISHERS=${NUM_OF_PUBLISHERS}
      - NUM_OF_CONSUMERS=${NUM_OF_CONSUMERS}
      - CONNECTION_POOL_INIT_SIZE=${CONNECTION_POOL_INIT_SIZE}
      - CONNECTION_POOL_MIN_SIZE=${CONNECTION_POOL_MIN_SIZE}
      - CONNECTION_POOL_MAX_SIZE=${CONNECTION_POOL_MAX_SIZE}
    depends_on:
      - rabbitmq
  postgrescerif:
    restart: always
    image: "${DOCKER_REGISTRY}/${METADATA_DB_IMAGE}"
    container_name: postgrescerif
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - psqldata:/var/lib/postgresql
    depends_on:
      - rabbitmq
    networks:
      - epos_network
volumes:
  rabbitmq:
    external: false
  resources:
    external: false
  backoffice:
    external: false
  ingestor:
    external: false
  externalaccess:
    external: false
  converter:
    external: false
  datametadataservice:
    external: false
  processingaccessservice:
    external: false
  psqldata:
    external: false
networks:
  epos_network: